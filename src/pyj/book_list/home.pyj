# vim:fileencoding=utf-8
# License: GPL v3 Copyright: 2017, Kovid Goyal <kovid at kovidgoyal.net>
from __python__ import hash_literals, bound_methods

from dom import ensure_id
from elementmaker import E
from session import get_interface_data
from gettext import gettext as _

from book_list.globals import get_db
from book_list.top_bar import create_top_bar
from book_list.ui import set_default_panel_handler, show_panel


def show_recent():
    db = get_db()
    if not db.initialized:
        window.setTimeout(show_recent.bind(this), 5)
        return
    container = document.getElementById(this)
    if not container:
        return


def init(container_id):
    create_top_bar(container_id, run_animation=True)
    container = document.getElementById(container_id)
    interface_data = get_interface_data()

    # Recent books
    recent = E.div(style='display:none')
    recent_container_id = ensure_id(recent)
    container.appendChild(recent)
    window.setTimeout(show_recent.bind(recent_container_id), 5)

    # Choose library
    cl = E.div(
        E.h2(_('Choose the calibre library to browse...'))
    )
    container.appendChild(cl)
    lids = sorted(interface_data.library_map, key=def(x): return interface_data.library_map[x];)
    for library_id in lids:
        library_name = interface_data.library_map[library_id]
        if library_name:
            cl.appendChild(E.div(E.a(library_name, href='javascript: void(0)', title=library_name, data_lid=library_id, onclick=def(ev):
                lib_id = ev.currentTarget.dataSet.lid
                show_panel('book_list', {'library_id': lib_id})
            )))


set_default_panel_handler(init)
